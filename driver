//driver, eh?
package driver

Forbedringer: flere pudler.

const lamp_channel_matrix[3][4]int{
	[LIGHT_UP1, LIGHT_DOWN1, LIGHT_COMMAND1]
	[LIGHT_UP2, LIGHT_DOWN2, LIGHT_COMMAND2]
	[LIGHT_UP3, LIGHT_DOWN3, LIGHT_COMMAND3]
	[LIGHT_UP4, LIGHT_DOWN4, LIGHT_COMMAND4]
}

const button_channel_matrix[3][4]int{
	[BUTTON_UP1, BUTTON_DOWN1, BUTTON_COMMAND1]
	[BUTTON_UP2, BUTTON_DOWN2, BUTTON_COMMAND2]
	[BUTTON_UP3, BUTTON_DOWN3, BUTTON_COMMAND3]
	[BUTTON_UP4, BUTTON_DOWN4, BUTTON_COMMAND4]
}

func elev_init(){
	//initialize
}


func set_motor_dir(){
	//set_direction
}

func set_door_open_lamp(chan bool ch){
	//set lamp
	door <- ch
	if door {
		Io_set_bit(LIGHT_DOOR_OPEN)
	}
	else{
		Io_clear_bit(LIGHT_DOOR_OPEN)
	}
}

func get_obstruction_signal(chan bool ach){
	var obstruction = false
	if Io_read_bit(OBSTRUCTION){
		obstruction = true
	}
	ach <- obstruction
}

func get_stop_signal(chan bool ach){
	//ach= accidentchannel
	var stopsignal = false
	if Io_read_bit(STOP){
		stopsignal = true
	}
	ach <- stopsignal
}

func elev_set_stop_lamp(chan bool ach){
	stopsignal <- ach
	if stopsignal == true{
		Io_set_bit(LIGHT_STOP)
	}
	else{
		Io_clear_bit(LIGHT_STOP)
	}
}

func elev_get_floor_sensor_signal(chan int ch){	
	_ <- ch
	var floor = -1
	if Io_read_bit(SENSOR_FLOOR1){
		floor = 0
	}
	else if Io_read_bit(SENSOR_FLOOR2){
		floor = 1
	}
	else if Io_read_bit(SENSOR_FLOOR3){
		floor = 2
	}
	else if Io_read_bit(SENSOR_FLOOR4){
		floor = 3
	}
	ch <- floor
}

func elev_set_floor_indicator(chan int ch){
	//motta beskjed fra getsensor, set tilh. bit hÃ¸yt
	floor <- ch
	if floor >= 0{ 
		if floor & 0x02{
			Io_set_bit(LIGHT_FLOOR_IND1)
		}
		else{
			Io_clear_bit(LIGHT_FLOOR_IND1)
		}
		if floor & 0x01{
			Io_set_bit(LIGHT_FLOOR_IND2)
		}
		else{
			Io_clear_bit(LIGHT_FLOOR_IND2)
		}
	}
}

go get_button_signal(chan string ch){
	//sjekk alle knapper, send hvis inntrykka
	for{
		switch{
			case Io_read_bit(
	
	
}

func elev_set_button_lamp(){

}
